name: Deploy

on: [push]

jobs:
  build_and_push_docker_images:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: mkdir ./docker-layers
      - name: Cache Docker Layers
        id: cache-docker-layers
        uses: actions/cache@v1
        with:
          path: ./docker-layers
          key: ${{ runner.os }}-docker-layers
      - name: Import Docker Layers
        run: |
          docker load -i ~/docker-layers/images.tar | true
      - name: Assume Role
        uses: youyo/awscredswrap@master
        with:
          role_arn: ${{ secrets.ROLE_ARN }}
          duration_seconds: 3600
          role_session_name: 'awscredswrap@GitHubActions'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'
      - name: Identity Check
        run: aws sts get-caller-identity
      - name: Install Docker Compose
        run: |
          echo Installing Docker Compose
          sudo curl -L "https://github.com/docker/compose/releases/download/1.25.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      - name: Build Docker Images
        run: |
          npm run docker:build:prod
      - name: Push Docker images to ECR
        run: |
          npm run docker:push-to-ecr
      - name: Export Docker Layers
        run: |
          export TAG=$(cat tag.txt)
          docker save $(docker images -q) -o ~/docker-layers/images.tar
      - name: Upload tag artifact for later reuse
        uses: actions/upload-artifact@v1
        with:
          name: tag
          path: tag.txt
  infrastructure:
    needs: build_and_push_docker_images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Assume Role
        uses: youyo/awscredswrap@master
        with:
          role_arn: ${{ secrets.ROLE_ARN }}
          duration_seconds: 3600
          role_session_name: 'awscredswrap@GitHubActions'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'
      - name: Provision Database
        run: |
          npm run terraform:02_database
